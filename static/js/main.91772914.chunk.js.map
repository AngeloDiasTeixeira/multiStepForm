{"version":3,"sources":["components/FormUserDetails.jsx","components/FormPersonalDetails.jsx","components/Confirm.jsx","components/Success.jsx","components/UserForm.jsx","App.js","index.js"],"names":["FormUserDetails","formData","nextStep","handleInputChange","onBlur","errors","className","htmlFor","id","value","firstName","onChange","touched","lastName","email","onClick","disabled","FormPersonalDetails","prevStep","occupation","city","bio","Confirm","Success","UserForm","useState","step","setFormData","result","getErrors","handleBlur","e","prevState","target","input","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91772914.chunk.js","sourcesContent":["const FormUserDetails = ({formData, nextStep, handleInputChange, onBlur, errors}) => {\r\n    return (\r\n        <div className=\"FormUserDetails\">\r\n            <h1>FormUserDetails</h1>\r\n            <form>\r\n                <div className=\"formEntry\">\r\n                    <label htmlFor=\"firstName\">FirstName:</label>\r\n                    <input id=\"firstName\"\r\n                           value={formData.firstName} \r\n                           onChange={handleInputChange(\"firstName\")}\r\n                           onBlur={onBlur}>\r\n                    </input>\r\n                    <span>\r\n                        {formData.touched.firstName && errors.firstName}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"formEntry\">\r\n                    <label htmlFor=\"lastName\">LastName:</label>\r\n                    <input id=\"lastName\"\r\n                           value={formData.lastName} \r\n                           onChange={handleInputChange(\"lastName\")}\r\n                           onBlur={onBlur}>\r\n                    </input>\r\n                    <span>\r\n                        {formData.touched.lastName && errors.lastName}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"formEntry\">\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input id=\"email\"\r\n                           value={formData.email} \r\n                           onChange={handleInputChange(\"email\")}\r\n                           onBlur={onBlur}>\r\n                    </input>\r\n                    <span>\r\n                        {formData.touched.email && errors.email}\r\n                    </span>\r\n                </div>\r\n            </form>\r\n            <div className={\"buttonContainer \" + ((errors.firstName || errors.lastName || errors.email) ? \"disabled\" : \"\")}>\r\n                <button className={((errors.firstName || errors.lastName || errors.email) ? \"disabled\" : \"\")}\r\n                        onClick={() => nextStep()} \r\n                        disabled={errors.firstName || errors.lastName || errors.email}>\r\n                    Continue\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormUserDetails;","const FormPersonalDetails = ({formData, nextStep, prevStep, handleInputChange, onBlur, errors}) => {\r\n    return (\r\n        <div className=\"FormPersonalDetails\">\r\n            <h1>FormPersonalDetails</h1>\r\n            <form>\r\n                <div className=\"formEntry\">\r\n                    <label htmlFor=\"occupation\">Occupation:</label>\r\n                    <input id=\"occupation\"\r\n                           value={formData.occupation} \r\n                           onChange={handleInputChange(\"occupation\")}\r\n                           onBlur={onBlur}>\r\n                    </input>\r\n                    <span>\r\n                        {formData.touched.occupation && errors.occupation}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"formEntry\">\r\n                    <label htmlFor=\"city\">city:</label>\r\n                    <input id=\"city\"\r\n                           value={formData.city} \r\n                           onChange={handleInputChange(\"city\")}\r\n                           onBlur={onBlur}>\r\n                    </input>\r\n                    <span>\r\n                        {formData.touched.city && errors.city}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"formEntry\">\r\n                    <label htmlFor=\"bio\">Bio:</label>\r\n                    <input id=\"bio\"\r\n                           value={formData.bio} \r\n                           onChange={handleInputChange(\"bio\")}\r\n                           onBlur={onBlur}>\r\n                    </input>\r\n                    <span>\r\n                        {formData.touched.bio && errors.bio}\r\n                    </span>\r\n                </div>\r\n            </form>\r\n            <div className=\"buttonContainer \">\r\n                <button onClick={() => prevStep()}>\r\n                    Go back\r\n                </button>\r\n                <button className={((errors.occupation || errors.city || errors.bio) ? \"disabled\" : \"\")}\r\n                        onClick={() => nextStep()} \r\n                        disabled={errors.occupation || errors.city || errors.bio}>\r\n                    Continue\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormPersonalDetails;","const Confirm = ({formData, nextStep, prevStep}) => {\r\n    return (\r\n        <div className=\"confirm\">\r\n            <h1>Confirmation page</h1>\r\n            <ul>\r\n                <li>\r\n                    <div>firstName:</div> {formData.firstName}\r\n                </li>\r\n                <li>\r\n                    <div>lastName:</div> {formData.lastName}\r\n                </li>\r\n                <li>\r\n                    <div>email:</div> {formData.email}\r\n                </li>\r\n                <li>\r\n                    <div>occupation:</div> {formData.occupation}\r\n                </li>\r\n                <li>\r\n                    <div>city:</div> {formData.city}\r\n                </li>\r\n                <li>\r\n                    <div>bio:</div> {formData.bio}\r\n                </li>\r\n            </ul>\r\n            <div className=\"buttonContainer\">\r\n                <button onClick={() => prevStep()}>Go back</button>\r\n                <button onClick={() => nextStep()}>Continue</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirm;","const Success = () => {\r\n    return (\r\n        <h1>Success</h1>\r\n    )\r\n}\r\n\r\nexport default Success;","import { useState } from \"react\";\r\nimport FormUserDetails from \"./FormUserDetails\";\r\nimport FormPersonalDetails from \"./FormPersonalDetails\";\r\nimport Confirm from \"./Confirm\";\r\nimport Success from \"./Success\";\r\n\r\nconst UserForm = () => {\r\n    let [formData, setFormData] = useState({\r\n        step: 1,\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        occupation: \"\",\r\n        city: \"\",\r\n        bio: \"\",\r\n        touched: {}\r\n    });\r\n\r\n    const errors = getErrors();\r\n    function getErrors() {\r\n        const result = {};\r\n        if(!formData.firstName) result.firstName = \"First name is required\";\r\n        if(!formData.lastName) result.lastName = \"Last name is required\";\r\n        if(!formData.email) result.email = \"Email is required\";\r\n        if(!formData.occupation) result.occupation = \"Occupation is required\";\r\n        if(!formData.city) result.city = \"City is required\";\r\n        if(!formData.bio) result.bio = \"Bio is required\";\r\n        return result;\r\n    }\r\n\r\n    const handleBlur = e => {\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            touched:{\r\n                ...prevState.touched,\r\n                [e.target.id]:true\r\n            }\r\n        }))\r\n    }\r\n\r\n    const nextStep = () => {\r\n        let { step } = formData;\r\n        setFormData({...formData,step: step + 1})\r\n    }\r\n\r\n    const prevStep = () => {\r\n        let { step } = formData;\r\n        setFormData({...formData,step: step - 1})\r\n    }\r\n\r\n    const handleInputChange = input => e => {\r\n        setFormData(() => (\r\n            {...formData, [input] : e.target.value})\r\n        );\r\n    }\r\n\r\n    switch(formData.step){\r\n        case 1 :\r\n            return <FormUserDetails formData={formData}\r\n                                    nextStep={nextStep}\r\n                                    handleInputChange={handleInputChange}\r\n                                    onBlur={handleBlur}\r\n                                    errors={errors}/>;\r\n        case 2 :\r\n            return <FormPersonalDetails formData={formData}\r\n                                        nextStep={nextStep}\r\n                                        prevStep={prevStep}\r\n                                        handleInputChange={handleInputChange}\r\n                                        onBlur={handleBlur}\r\n                                        errors={errors}/>;\r\n        case 3 :\r\n            return <Confirm formData={formData}\r\n                            nextStep={nextStep}\r\n                            prevStep={prevStep}/>;\r\n        case 4 :\r\n            return <Success />;\r\n    }\r\n}\r\n\r\nexport default UserForm;","import UserForm from \"./components/UserForm\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}